<div id="productosContainer" class="product-container">
    {{#if productos.length}}
        {{#each productos}}
        <div class="product-card">
            <h2>{{this.title}}</h2>
            <p><strong>Precio:</strong> ${{this.price}}</p>
            <p><strong>Descripci√≥n:</strong> {{this.description}}</p>
            <p><strong>C√≥digo:</strong> {{this.code}}</p>
            <p><strong>Stock:</strong> <span id="stock-{{this._id}}">{{this.stock}}</span></p>
            <p><strong>Categor√≠a:</strong> {{this.category}}</p>
            <button onclick="addToCart('{{this._id}}')">Agregar al carrito</button>
            <a href="/products/{{this._id}}">Ver m√°s</a>
        </div>
        {{/each}}
    {{else}}
        <p>No hay productos disponibles.</p>
    {{/if}}
</div>

<!-- Paginaci√≥n -->
<div class="pagination">
    {{#if pagination.hasPrevPage}}
    <a href="{{pagination.prevLink}}">Anterior</a>
    {{/if}}
    <span>P√°gina {{pagination.page}} de {{pagination.totalPages}}</span>
    {{#if pagination.hasNextPage}}
    <a href="{{pagination.nextLink}}">Siguiente</a>
    {{/if}}
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
if (!window.socket) {
    window.socket = io({ transports: ["websocket"] });
    console.log("üü¢ WebSocket conectado en /products");

    // üîÑ Escuchar eventos de actualizaci√≥n de productos
    window.socket.on("productosActualizados", (productos) => {
        console.log("üîÑ Productos actualizados:", productos);
        const container = document.getElementById("productosContainer");
        container.innerHTML = "";

        productos.forEach((prod) => {
            const div = document.createElement("div");
            div.classList.add("product-card");
            div.innerHTML = `
                <h2>${prod.title}</h2>
                <p><strong>Precio:</strong> $${prod.price}</p>
                <p><strong>Descripci√≥n:</strong> ${prod.description}</p>
                <p><strong>C√≥digo:</strong> ${prod.code}</p>
                <p><strong>Stock:</strong> <span id="stock-${prod._id}">${prod.stock}</span></p>
                <p><strong>Categor√≠a:</strong> ${prod.category}</p>
                <button onclick="addToCart('${prod._id}')">Agregar al carrito</button>
                <a href="/products/${prod._id}">Ver m√°s</a>
            `;
            container.appendChild(div);
        });
    });
}
</script>





<script>
async function addToCart(productId) {
    let cartId = localStorage.getItem("cartId");

    if (cartId) {
        const cartResponse = await fetch(`/carts/${cartId}`);
        if (cartResponse.status === 404) {
            console.warn("‚ùå Carrito en localStorage no existe en MongoDB, se crear√° uno nuevo.");
            localStorage.removeItem("cartId");
            cartId = null;
        }
    }

    if (!cartId) {
        try {
            const response = await fetch(`/carts`, { method: "POST" });
            if (!response.ok) throw new Error("Error al crear carrito");

            const cartData = await response.json();
            cartId = cartData._id;
            localStorage.setItem("cartId", cartId);
            console.log(`üõí Nuevo carrito creado: ${cartId}`);
        } catch (error) {
            console.error("‚ùå Error al crear carrito:", error);
            Swal.fire("Error", "No se pudo crear el carrito.", "error");
            return;
        }
    }

    try {
        const response = await fetch(`/carts/${cartId}/products/${productId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ quantity: 1 })
        });

        if (!response.ok) throw new Error("Error al agregar al carrito");

        Swal.fire({
            title: "‚úÖ Producto agregado",
            text: "El producto fue a√±adido al carrito correctamente.",
            icon: "success",
            confirmButtonText: "Ir al carrito",
            showCancelButton: true,
            cancelButtonText: "Seguir comprando"
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/carts/${cartId}`;
            }
        });

    } catch (error) {
        console.error("‚ùå Error:", error);
        Swal.fire("Error", "No se pudo agregar el producto al carrito.", "error");
    }
}

</script>